#extension GL_OES_EGL_image_external : require

#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform vec2 resolution;
uniform samplerExternalOES cameraBack;
uniform float time;
uniform float mediaVolume;

void main(void) {
    vec2 uv = gl_FragCoord.xy / resolution;
    vec2 rotatedUV = vec2(1.0 - uv.y, 1.0 - uv.x);

    vec3 color = texture2D(cameraBack, rotatedUV).rgb;

    // Convert to grayscale
    float gray = dot(color, vec3(0.299, 0.587, 0.114));

    // Posterize the grayscale value
    float levels = (10.0 * sin(mediaVolume)) + 2.0;
    float posterizedGray = floor(gray * levels) / levels;

    vec3 finalColor = vec3(posterizedGray);

    gl_FragColor = vec4(finalColor, 1.0);
}
