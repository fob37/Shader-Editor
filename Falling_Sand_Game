#version 300 es
precision highp float;


uniform float iTime;
uniform int iFrame;
uniform float mediaVolume;
uniform vec2 touch;
uniform vec2 resolution;
uniform vec3 pointers[10];
uniform int pointerCount;
uniform sampler2D backbuffer;

out vec4 fragColor;

const float fallSpeed = 1.0;

bool isEmpty(vec3 c) {
    return c == vec3(0.0);
}

bool isSand(vec3 c) {
    return c.r > 0.9 && c.g > 0.9 && c.b < 0.1;
}

bool isWater(vec3 c) {
    return c.b > 0.9 && c.r < 0.1 && c.g < 0.1;
}

bool isStone(vec3 c) {
    return c.r > 0.1 && c.r < 0.3 &&
           c.g > 0.1 && c.g < 0.3 &&
           c.b > 0.1 && c.b < 0.3;
}

void main() {
    vec2 uv = gl_FragCoord.xy / resolution.xy;
    vec2 texel = 1.0 / resolution;

    vec3 color = vec3(0.0);
    vec3 current = texture(backbuffer, uv).rgb;

    // Neighbor sampling
    vec3 up = texture(backbuffer, uv + vec2(0.0, texel.y * fallSpeed)).rgb;
    vec3 down = texture(backbuffer, uv - vec2(0.0, -texel.y * fallSpeed)).rgb;
    vec3 left = texture(backbuffer, uv - vec2(-texel.x, 0.0)).rgb;
    vec3 right = texture(backbuffer, uv + vec2(texel.x, 0.0)).rgb;
    vec3 leftUp = texture(backbuffer, uv + vec2(-texel.x, texel.y * fallSpeed)).rgb;
    vec3 rightDown = texture(backbuffer, uv + vec2(texel.x, -texel.y * fallSpeed)).rgb;

    // Movement
    if (isSand(current)) {
        bool atBottom = gl_FragCoord.y < 0.4;
        bool blockedBelow = !isEmpty(down) && !isEmpty(rightDown);
        if (atBottom || blockedBelow) {
            color = current - vec3(1.0 / 255.0, 1.0 / 255.0, 0.0);
        } else {
            color = vec3(1.0,1.0,0.0);
        }

    } else if (isWater(current)) {
        if (isEmpty(down)) {
            color = vec3(0.0,0.0,1.0);
        } else if (isEmpty(left)) {
            color = vec3(0.0,0.0,1.0);
        } else if (isEmpty(right)) {
            color = vec3(0.0,0.0,1.0);
        } else {
            color = current - vec3(0.0, 0.0, 1.0 / 255.0);
        }

    } else if (isStone(current)) {
        color = current;

    } else {
        if (isSand(up)) {
            color = up - vec3(1.0 / 255.0, 0.0, 0.0);
        } else if (isWater(up)) {
            color = up - vec3(0.0, 0.0, 1.0 / 255.0);
        } else if (isSand(leftUp) && isEmpty(down) && !isEmpty(left)) {
            color = leftUp - vec3(1.0 / 255.0, 0.0, 0.0);
        }
    }

  float tapSize = min(resolution.x, resolution.y) * 0.01;
	for (int n = 0; n < pointerCount; ++n) {
		if (distance(pointers[n].xy, gl_FragCoord.xy) < tapSize) {
			//do stuf when click
			if (pointerCount == 1) {
                color = vec3(1.0, 1.0, 0.0); // Sand
            } else if (pointerCount == 2) {
                color = vec3(0.0, 0.0, 1.0); // Water
            } else if (pointerCount == 3) {
                color = vec3(0.2, 0.2, 0.2); // Stone
            }
			break;
		}

	}

    fragColor = vec4(color, 1.0);
}